@import '../../../style/form/mixins';

@mixin slottedItems($prefix: false) {
    @include inputs($prefix, true) {
        @content;
    }
}

:host {
    @apply block w-full;

    .input-group {
        @apply flex flex-col w-full;

        .input-label {
            @apply text-xs text-storm-vague font-semibold uppercase tracking-wider;
        }

        .input-header {
            @apply flex gap-2 items-end mb-[2px];
        }

        .content {
            @apply flex;

            .prefix,
            .suffix {
                @include inputDefaultState();
                @apply flex-1;
                @apply text-storm box-border;
            }

            .prefix {
                @apply rounded-tr-none rounded-br-none;
                @apply border-r-0 #{!important};
                @apply order-1;
                @apply pr-2;
            }

            .suffix {
                @apply rounded-tl-none rounded-bl-none;
                @apply border-l-0 #{!important};
                @apply order-3;
                @apply pl-2;
            }

            @include slottedItems() {
                @apply order-2;
            }

            @include slottedItems('.prefix') {
                @apply rounded-tl-none rounded-bl-none #{!important};
                @apply flex-auto;
                @apply border-l-0 pl-0 #{!important};
            }

            @include slottedItems('.suffix') {
                @apply rounded-tr-none rounded-br-none #{!important};
                @apply flex-auto;
                @apply border-r-0 pr-0 #{!important};
            }
        }

        &.focused,
        &:focus-within {
            .prefix,
            .suffix {
                @include inputFocusState();
                @apply text-indigo;
            }

            @include slottedItems() {
                @include inputFocusState();
            }
        }

        &.error,
        &[error] {
            .prefix,
            .suffix {
                @include inputErrorState();
                @apply text-negative;
            }

            @include slottedItems() {
                @include inputErrorState();
            }
        }

        &.disabled,
        &[disabled] {
            .prefix,
            .suffix {
                @include inputDisabledState();
            }

            @include slottedItems() {
                @include inputDisabledState();
                pointer-events: none;
            }
        }
    }
}
