@import '../../../style/form/mixins';

@mixin slottedItems($prefix: false) {
    @include inputs($prefix, true) {
        @content;
    }
}

:host {
    @apply flex w-full flex-col;
    @apply outline-none #{!important};

    .input-label {
        @apply mb-[2px] text-xs font-semibold uppercase tracking-wider text-storm-vague;
    }

    .input-header {
        @apply mb-[2px] flex items-end gap-2;
    }

    .content {
        @apply flex w-full;

        .prefix,
        .suffix {
            @include inputDefaultState();
            @apply box-border flex-1 text-storm;
        }

        .prefix {
            @apply rounded-br-none rounded-tr-none;
            @apply border-r-0 #{!important};
            @apply order-1;
            @apply pr-2;
        }

        .suffix {
            @apply rounded-bl-none rounded-tl-none;
            @apply border-l-0 #{!important};
            @apply order-3;
            @apply pl-2;
        }

        @include slottedItems() {
            @include inputDefaultState();
            @apply order-2;
        }

        @include slottedItems('.prefix') {
            @apply rounded-bl-none rounded-tl-none #{!important};
            @apply flex-auto;
            @apply border-l-0 pl-0 #{!important};
        }

        @include slottedItems('.suffix') {
            @apply rounded-br-none rounded-tr-none #{!important};
            @apply flex-auto;
            @apply border-r-0 pr-0 #{!important};
        }
    }
}

:host(.focused),
:host([focused]),
:host(:focus-within),
:host(:focus) {
    @apply outline-none #{!important};

    .prefix,
    .suffix {
        @include inputFocusState();
        @apply text-indigo;
    }

    @include slottedItems() {
        @include inputFocusState();
    }
}

:host(.error),
:host([error]) {
    .prefix,
    .suffix {
        @include inputErrorState();
        @apply text-negative;
    }

    @include slottedItems() {
        @include inputErrorState();

        &:focus,
        &:focus-within,
        &:focus-visible,
        &.focus,
        &[active],
        &.active {
            @include inputErrorState();
        }
    }
}

:host(.disabled),
:host([disabled]) {
    .prefix,
    .suffix {
        @include inputDisabledState();
    }

    @include slottedItems() {
        @include inputDisabledState();
        pointer-events: none;
    }
}

:host(.size-small) {
    @include slottedItems() {
        @include inputSizeSmall();
    }
}
