@mixin inputs($prefix: false, $slotted: false) {
	@if $prefix != false {
		@if $slotted == true {
			#{$prefix} + ::slotted(div[contenteditable].p-input),
			#{$prefix} + ::slotted(input[type='text'].p-input),
			#{$prefix} + ::slotted(input[type='number'].p-input),
			#{$prefix} + ::slotted(input[type='date'].p-input),
			#{$prefix} + ::slotted(input[type='month'].p-input),
			#{$prefix} + ::slotted(input[type='datetime-local'].p-input),
			#{$prefix} + ::slotted(input[type='time'].p-input),
			#{$prefix} + ::slotted(input[type='tel'].p-input),
			#{$prefix} + ::slotted(input[type='password'].p-input),
			#{$prefix} + ::slotted(input[type='email'].p-input),
			#{$prefix} + ::slotted(textarea.p-input) {
				@content;
			}
		} @else {
			#{$prefix} + div[contenteditable],
			#{$prefix} + input[type='text'],
			#{$prefix} + input[type='number'],
			#{$prefix} + input[type='date'],
			#{$prefix} + input[type='month'],
			#{$prefix} + input[type='datetime-local'],
			#{$prefix} + input[type='time'],
			#{$prefix} + input[type='tel'],
			#{$prefix} + input[type='password'],
			#{$prefix} + input[type='email'],
			#{$prefix} + textarea {
				&.p-input {
					@content;
				}
			}
		}
	} @else {
		@if $slotted == true {
			::slotted(div[contenteditable].p-input),
			::slotted(input[type='text'].p-input),
			::slotted(input[type='number'].p-input),
			::slotted(input[type='date'].p-input),
			::slotted(input[type='month'].p-input),
			::slotted(input[type='datetime-local'].p-input),
			::slotted(input[type='time'].p-input),
			::slotted(input[type='tel'].p-input),
			::slotted(input[type='password'].p-input),
			::slotted(input[type='email'].p-input),
			::slotted(textarea.p-input) {
				@content;
			}
		} @else {
			div[contenteditable],
			input[type='text'],
			input[type='number'],
			input[type='date'],
			input[type='month'],
			input[type='datetime-local'],
			input[type='time'],
			input[type='tel'],
			input[type='password'],
			input[type='email'],
			textarea {
				&.p-input {
					@content;
				}
			}
		}
	}
}

@mixin inputDefaultState($applyHeight: true) {
	@apply flex items-center justify-start;
	@apply text-sm text-black-teal;
	@apply bg-white px-2;
	@apply rounded-lg;
	@apply border-b border-l border-r border-t;
	@apply border-solid border-black-teal-100 #{!important};
	@apply outline-none #{!important};
	@apply w-full #{!important};
	@apply shadow-transparent transition-all;
	transition-property: box-shadow, border-color;

	@if $applyHeight {
		@apply h-8;
	}

	&::placeholder {
		@apply text-sm text-black-teal-200;
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&.focus,
	&[active],
	&.active {
		@include inputFocusState();
	}

	&.size-sm {
		@include inputSizeSm($applyHeight);
	}
}

@mixin inputFocusState {
	@apply border-supportive-lilac #{!important};
	@apply outline-none #{!important};
	@apply shadow-supportive-lilac;
}

@mixin inputErrorState {
	@apply text-negative-red-800;
	@apply border-negative-red #{!important};

	&::placeholder {
		@apply text-black-teal-200;
	}

	&:focus,
	&:focus-within,
	&:focus-visible,
	&.focus,
	&[active],
	&.active {
	}
}

@mixin inputDisabledState {
	@apply opacity-40;
}

@mixin inputSizeSm($applyHeight: true) {
	@apply text-xs;

	@if $applyHeight {
		@apply h-6 #{!important};
	}

	&::placeholder {
		@apply text-xs;
	}
}
